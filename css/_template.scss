@use "sass:math";

$base: 16px;
$size-font: 12px;

@function u($size) {
	@return math.div(1em, 12) * $size;
}

$size-icon: var(--as-icon-size);
$size-bar: $base;

$pad: u(3);

$vert-pad: u(6);
$horz-pad: u(9);

$base-padding: $vert-pad $horz-pad;

$vert-button-pad: u(3);
$horz-button-pad: u(6);

$base-button-padding: $vert-button-pad $horz-button-pad;

$radius: u(3);

$shadow: 0px 2px 5px#0000000e;

$color-0: "color-0";
$color-1: "color-1";
$color-2: "color-2";
$color-3: "color-3";
$text: "text";
$border: "border";

$themes: (
	light: (
		color-0: #ffffff,
		color-1: #ebebf0,
		color-2: #dadae3,
		color-3: #c2c3cf,
		text: #000000,
		border: u(1) solid #cdceda,
	),
	dark: (
		color-0: #1c1b22,
		color-1: #282731,
		color-2: #373642,
		color-3: #413f50,
		text: #ffffff,
		border: u(1) solid #373642,
	),
);

$theme-map: null;

@mixin base-themed() {
	@each $theme, $map in $themes {
		&.artsaver-theme-#{$theme} {
			$theme-map: () !global;
			@each $key, $submap in $map {
				$value: map-get(map-get($themes, $theme), "#{$key}");
				$theme-map: map-merge(
					$theme-map,
					(
						$key: $value,
					)
				) !global;
			}
			@content;
			$theme-map: null !global;
		}
	}
}

@mixin themed() {
	@each $theme, $map in $themes {
		.artsaver-theme-#{$theme} & {
			$theme-map: () !global;
			@each $key, $submap in $map {
				$value: map-get(map-get($themes, $theme), "#{$key}");
				$theme-map: map-merge(
					$theme-map,
					(
						$key: $value,
					)
				) !global;
			}
			@content;
			$theme-map: null !global;
		}
	}
}

@function t($key) {
	@return map-get($theme-map, $key);
}

$color-screen: gray;

$blue: #0a84ff;
$blue-light-1: #249cffff;
$blue-light-2: scale-color($blue-light-1, $lightness: 5%);

$green: #07cc07;
$green-light-1: scale-color($green, $lightness: 5%);
$green-light-2: scale-color($green, $lightness: 10%);

$color-progress: #4d555c;
$color-progress-text: white;

$color-error-text: #721c24;
$color-error-1: #f8d7da;
$color-error-2: #f5c6cb;

$icon-check-green: url("/icons/check_green.svg");
$icon-check-yellow: url("/icons/check_yellow.svg");
$icon-remove: url("/icons/remove.svg");
$icon-loading: url("/icons/loading.svg");
$icon-download: url("/icons/download.svg");
$icon-download-hover: url("/icons/download_hover.svg");
$icon-error: url("/icons/error.svg");

$icon-check-flat: url("/icons/flat/check_flat.svg");
$icon-ex-link: url("/icons/flat/link.svg");
$icon-folder: url("/icons/flat/folder.svg");
$icon-collapse: url("/icons/flat/collapse.svg");

$icon-selection: url("/icons/selection.svg");

%font {
	font: {
		family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans",
			"Helvetica Neue", sans-serif;
		style: normal;
		weight: normal;
	}
	font-size: $size-font;
}

%switch {
	$width: u(32);
	$height: u(18);
	$diameter: u(12);

	$space: math.div(($height - $diameter), 2);

	position: relative;
	width: $width;
	height: $height;
	border-radius: math.div($height, 2);
	transition: background-color 0.2s;
	flex-shrink: 0;

	@include themed() {
		background-color: t($color-1);
	}

	&:hover {
		@include themed() {
			background-color: t($color-2);
		}
	}

	input:checked + & {
		background-color: $blue;
	}

	label:hover input:checked + & {
		background-color: $blue-light-1;
	}

	&::after {
		content: "";
		position: absolute;
		width: $diameter;
		height: $diameter;
		left: $space;
		bottom: $space;
		border-radius: math.div($diameter, 2);
		background-color: #fff;
		transition: left 0.2s;

		@include themed() {
			background-color: t($color-0);
		}
	}

	input:checked + &::after {
		background-color: white;
		left: $width - ($diameter + $space);
	}
}

%icon-button {
	cursor: pointer;
	font-size: 1rem;
	text-align: center;
	text-decoration: none;
	display: flex;
	justify-content: center;
	align-items: center;

	@include themed() {
		color: t($text);
		background-color: t($color-0);
	}

	&:hover {
		@include themed() {
			background-color: t($color-1);
		}
	}

	&:active {
		@include themed() {
			background-color: t($color-2);
		}
	}
}

%info-box {
	width: 100%;

	.search-box {
		padding: u(2) $horz-pad;
		display: flex;

		@include themed() {
			background-color: t($color-1);
		}

		button {
			padding: u(6);

			@extend %icon-button;
		}
	}

	.search-clear {
		border-radius: 0;

		@include themed() {
			border: t($border);
			border-left: none;
		}
	}

	.search-sort {
		border-radius: 0 $radius $radius 0;

		@include themed() {
			border: t($border);
			border-left: none;
		}
	}

	input {
		color: inherit;
		border-radius: $radius 0 0 $radius;
		padding: $base-button-padding;
		outline: none;
		font: {
			size: inherit;
			family: inherit;
		}
		flex: 1;

		@include themed() {
			border: t($border);
			background-color: t($color-0);
		}

		&:focus {
			border-right: {
				style: solid;
				width: u(1);
			}
			border-color: $blue;
		}
	}

	.list-box {
		position: relative;
		overflow: auto;
		resize: vertical;

		@include themed() {
			border-top: t($border);
		}
	}

	.list {
		position: absolute;
		top: 0;
		width: 100%;

		> * {
			position: absolute;
			white-space: nowrap;
			overflow: hidden;

			width: 100%;
			box-sizing: border-box;

			&:hover {
				.row-label {
					padding-left: $horz-pad + u(6);

					@include themed() {
						background-color: t($color-1);
					}
				}
			}
		}
	}

	.link-search {
		font-weight: 700;
	}

	.list-row {
		display: flex;

		> * {
			padding: {
				top: u(1);
				bottom: u(1);
			}
		}
	}

	.row-label {
		flex: 1;
		border-right: {
			width: u(1);
			style: solid;
		}
		padding-left: $horz-pad;
		transition: padding-left 0.2s;
		min-width: 0;
		text-overflow: ellipsis;
		overflow: hidden;

		@include themed() {
			border-right-color: t($color-0);
		}
	}

	a {
		@extend %icon-button;

		padding: {
			left: u(4);
			right: u(4);
		}
	}
}

%mask-base {
	position: relative;

	&::after {
		content: "";
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		pointer-events: none;
		mask: {
			repeat: no-repeat;
		}

		@include themed() {
			background-color: t($text);
		}
	}
}

@mixin mask-svg() {
	@extend %mask-base;

	&::after {
		@content;
	}
}
